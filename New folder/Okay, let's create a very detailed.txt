Okay, let's create a very detailed plan for the website components, their functionality, and navigation, specifying button locations within the left (Editor) and right (Preview) panels, as well as any modal/full-screen views.

**I. Global Layout & Core Components**

*   **`App` Component (Root):**
    *   **Functionality:** Manages overall application state (current view, resume data, selected template settings). Renders the main two-pane layout.
    *   **Navigation Logic:** Handles switching between `EditorView` and `TemplateView`.
*   **Two-Pane Layout:**
    *   **Left Panel (`EditorPanelContainer`):** Fixed width (e.g., 40-45% of viewport width), scrollable content. Background: Light Gray.
    *   **Right Panel (`PreviewPanelContainer`):** Flexible width (e.g., 55-60% of viewport width), relatively centered content. Background: Slightly darker Gray or textured.

**II. Editor View (`currentView === 'editor'`)**

**A. Left Panel (`EditorPanelContainer`)**

1.  **`EditorHeader` Component:**
    *   **Top-Left:**
        *   **`Logo` Component:** Displays the brand logo (SVG or image).
            *   **Position:** Far top-left of the editor panel.
            *   **Function:** Branding, potentially a link to the homepage if this were a multi-page site.
    *   **Top (Full Width of Editor Panel):**
        *   **`ResumeScoreBar` Component:**
            *   **Elements:**
                *   Thin horizontal progress bar.
                *   Text: "XX% Your resume score"
                *   Text: "+X% Add [suggestion]" (e.g., "+10% Add job title")
            *   **Position:** Immediately below the very top edge of the editor panel, above section content.
            *   **Function:** Visually indicates resume completeness. Updates dynamically as user fills fields. The suggestion text guides the user.
2.  **`FormSections` Component (Main scrollable area in Left Panel):**
    *   **Functionality:** Iterates through defined resume sections and renders an `AccordionSection` for each. Manages the order of sections.
    *   **`AccordionSection` Component (Reusable for Personal Details, Employment, Education, etc.):**
        *   **Header Part:**
            *   **`SectionTitle` Text:** e.g., "Personal details", "Employment History".
            *   **(Optional) `InfoIcon`:** A small "?" icon.
                *   **Position:** Next to the section title.
                *   **Function:** On hover/click, shows a tooltip with guidance for that section.
            *   **`ExpandCollapseArrow` Icon:** (Up/Down arrow).
                *   **Position:** Right side of the section header.
                *   **Function:** Toggles the visibility of the `SectionBody`.
        *   **Body Part (Conditionally Rendered):**
            *   Contains the specific input fields and controls for that section.
    *   **Specific Sections within `FormSections`:**
        *   **1. `PersonalDetailsSection` Component:**
            *   **Helper Text:** "Users who added phone number and email..."
                *   **Position:** Below the "Personal details" title, before the first input.
            *   **Input Fields:**
                *   **Job Title Input:** (Placeholder: "The role you want")
                *   **First Name Input**
                *   **Last Name Input**
                *   **Email Input**
                *   **Phone Input**
                *   **Address Input**
                *   **City / State Input**
                *   **Country Input**
            *   **`PhotoUpload` Component:**
                *   **Elements:** Placeholder icon and "Upload photo" text.
                *   **Position:** Typically next to Job Title or near the top of Personal Details.
                *   **Function:**
                    *   Clicking opens a system file dialog.
                    *   Handles image selection, displays a preview. (Advanced: cropping/editing).
            *   **`ToggleMoreDetailsLink` Component:**
                *   **Text:** "Add more details ▼" or "Hide additional details ▲".
                *   **Position:** Below the main set of personal detail inputs.
                *   **Function:** Toggles visibility of: Postal Code Input, Driving License Input, Place of Birth Input, Date of Birth Input, Nationality Input.
        *   **2. `EmploymentHistorySection` Component:**
            *   **Header:** "Employment History". Helper text.
            *   **`EmploymentEntry` Component (Repeatable):**
                *   **Header (within entry):** "(Not specified)" or Job Title.
                *   **Controls (within entry header, typically on the right):**
                    *   **`ExpandCollapseArrow` Icon.**
                    *   **`DeleteEntryButton` Icon (Trash Can):**
                        *   **Function:**
                            1.  Shows `ConfirmationModal` ("Delete Entry", "Are you sure...", "Don't ask me again", "Delete", "Cancel").
                            2.  If "Delete" clicked, removes this specific employment entry from the state.
                    *   **`DragHandle` Icon (e.g., six dots):**
                        *   **Function:** Allows drag-and-drop reordering of employment entries.
                *   **Body (Input fields, when expanded):** Job Title, Employer, Start Date, End Date (with "Currently work here" toggle), City, Description (Rich Text Editor with "Get help with writing" button opening an `AIWriterModal`).
            *   **`AddMoreEmploymentButton` Component:**
                *   **Text:** "+ Add one more employment".
                *   **Position:** Below all current employment entries.
                *   **Function:** Adds a new blank `EmploymentEntry` to the state and UI.
        *   **3. `EducationSection` Component:** (Similar structure to `EmploymentHistorySection`)
            *   Header, `EducationEntry` (repeatable with delete/drag), `AddMoreEducationButton`.
        *   **4. `SkillsSection` Component:**
            *   Header, Helper text.
            *   **`ToggleExperienceLevelSwitch` Component:**
                *   **Text:** "Don't show experience level".
                *   **Position:** Below the section header.
                *   **Function:** Globally hides/shows the level selector for all skills.
            *   **`SuggestedSkillsList` Component:** Buttons with "+" (e.g., "Python +").
                *   **Position:** Below the toggle switch.
                *   **Function:** Adds the skill to the user's list with a default level.
            *   **`SkillEntry` Component (Repeatable):** Skill Name, Level (slider/segmented control), Delete, Drag Handle.
            *   **`AddMoreSkillButton` Component.**
        *   **5. `ProfessionalSummarySection` Component:**
            *   Header, Helper text.
            *   **`RichTextInput` Component.**
            *   **`PrewrittenPhrasesButton` Component:**
                *   **Text:** "Pre-written phrases". Plus icon.
                *   **Position:** Near the rich text input, often above or to the side.
                *   **Function:** Opens `PrewrittenPhrasesModal/Drawer`.
                    *   **`PrewrittenPhrasesModal/Drawer`:**
                        *   Search Input: "Filter phrases by keyword and job title".
                        *   Scrollable list of phrases.
                        *   Clicking a phrase inserts it into the Professional Summary.
                        *   Close button (X).
            *   **Character Count Display.**
        *   **(Dynamically Added Sections - e.g., `LanguagesSection`, `HobbiesSection` will appear here if added via the "Add Additional Sections" view)**
            *   **`LanguagesSection` Component:**
                *   `LanguageEntry` (repeatable): Language Input, Level Dropdown, Delete, Drag.
                *   `AddMoreLanguageButton`.
            *   **`HobbiesSection` Component:**
                *   Single `TextAreaInput` for hobbies.
3.  **`EditorFooter` Component:**
    *   **`BackButton`:**
        *   **Text:** "Back".
        *   **Position:** Bottom-left of the editor panel.
        *   **Function:** Navigates to the previous major section. Disabled on the first section.
    *   **`ProgressDots` Component:**
        *   **Position:** Center of the editor footer.
        *   **Function:** Visually indicates the current step in the main resume-building flow.
    *   **`NextButton` Component:**
        *   **Text:** "Next: [Next Section Name]" (e.g., "Next: Employment History") or "Finish" on the last main section.
        *   **Position:** Bottom-right of the editor panel.
        *   **Function:** Navigates to the next major section or to the "Add Additional Sections" view if it's the next logical step.

**B. Right Panel (`PreviewPanelContainer`)**

1.  **`PreviewHeader` Component:**
    *   **`ChangeTemplateButton` (Alternative Position):**
        *   **Text:** "Change template" (often with an icon).
        *   **Position:** Top-left of the preview panel.
        *   **Function:** Navigates to `TemplateView`.
    *   **`DownloadPDFButton`:**
        *   **Text:** "Download PDF".
        *   **Position:** Top-right of the preview panel.
        *   **Function:** Initiates PDF generation of the current resume preview.
2.  **`ResumePreviewCanvas` Component:**
    *   **Main Element:** A `div` styled to look like a paper document.
        *   **`FullScreenToggleButton`:** An icon (like in the video `sc-kBIGSu cifDYK`) to toggle a larger/full-screen view of the preview, often an overlay.
            *   **Position:** Hovers over the canvas, or in a corner.
        *   **Content:** Dynamically rendered HTML based on resume data and selected template. This will have sub-components for each section (e.g., `PreviewPersonalDetails`, `PreviewEmployment`, `PreviewSkills`).
    *   **Position:** Centered within the `PreviewPanelContainer`.
    *   **Function:** Displays a live, styled preview of the resume as the user types.
3.  **`PreviewFooter` Component:**
    *   **`SavedStatus` Text/Icon:** (e.g., "✔ Saved").
        *   **Position:** Bottom-left of the preview panel.
        *   **Function:** Indicates data persistence (e.g., to local storage).
    *   **`PageNavigation` Controls:** (e.g., "< 1 / 1 >").
        *   **Position:** Bottom-center/right of the preview panel.
        *   **Function:** Allows navigating between pages if the resume preview spans multiple pages.

**III. Template Selection View (`currentView === 'templateSelector'`)**
*(This view typically takes over the entire screen or is a large modal, replacing the editor/preview layout temporarily, or it replaces the Left Panel specifically)*

1.  **`TemplateViewHeader` Component:**
    *   **`BackToEditorButton`:**
        *   **Text:** "Back to editor" (often with a back arrow icon).
        *   **Position:** Top-left of the template view.
        *   **Function:** Sets `currentView = 'editor'`, returning to the main editor.
    *   **`DownloadPDFButton` (Alternative Position):** Could also be present here.
2.  **Main Layout for Template View (if it's a full-screen takeover):**
    *   **Left Sidebar (`TemplateControlsSidebar`):**
        *   **`Tabs` Component ("Templates", "Aa Text", "Layout"):**
            *   **Position:** Top of the sidebar.
            *   **Function:** Switches the content displayed below in the sidebar.
        *   **`TemplatesTabContent` (Visible when "Templates" tab is active):**
            *   **`AccentColorPicker` Component:** Row of colored circles, "+" for custom color.
            *   **`TemplateList` Component:** Scrollable grid/list of `TemplateThumbnail` components.
                *   **`TemplateThumbnail`:** Shows a mini image of the template, its name ("Toronto"), and "PDF"/"DOCX" badges.
                    *   **Function:** Clicking selects this template, updating the live preview. The selected thumbnail gets a visual highlight (e.g., border, checkmark).
        *   **`TextTabContent` (Visible when "Aa Text" tab is active):**
            *   **Font Selectors:** "Primary font", "Secondary font" (dropdowns).
            *   **Size Slider.**
            *   **Spacing Slider.**
            *   **Note:** Displays "This template does not support..." if applicable.
        *   **`LayoutTabContent` (Visible when "Layout" tab is active):**
            *   **Format Selector:** "Format" (dropdown, e.g., "A4").
    *   **Main Preview Area (`TemplatePreviewArea`):**
        *   **`ResumePreviewCanvas` Component:** Same component as in the Editor View's right panel.
            *   **Function:** Updates live based on selections made in the `TemplateControlsSidebar`.

**IV. "Add Additional Sections" View**
*(This could be a step in the main editor flow or a separate modal/page)*

1.  **`AdditionalSectionsHeader` Component:**
    *   **Title:** "Add Additional Sections".
    *   **Helper Text.**
2.  **`AdditionalSectionSelectorGrid` Component:**
    *   Grid of buttons/clickable cards, each with an icon and text:
        *   **`SectionButton` ("Custom Section")**
        *   **`SectionButton` ("Courses")**
        *   **`SectionButton` ("Extra-curricular Activities")**
        *   **`SectionButton` ("Internships")**
        *   **`SectionButton` ("Hobbies")**
        *   **`SectionButton` ("Languages")**
        *   **`SectionButton` ("References")**
    *   **Function:**
        *   Clicking a button toggles its active state (adds/removes it from a list of sections to be included in the resume).
        *   Some implementations might immediately add the section to the main editor form and navigate to it. Others might wait for a "Confirm" or "Finish" button on this page.
3.  **`AdditionalSectionsFooter` Component:**
    *   **`BackButton`** (if it's part of the main flow).
    *   **`FinishButton` or `NextButton`:**
        *   **Text:** "Finish" (if this is the last configuration step) or "Next: [First Added Section/Next Main Section]".
        *   **Function:** Applies the selected additional sections and navigates accordingly.

**Navigation Flow Summary:**

1.  **Initial Load:** `EditorView` -> `PersonalDetailsSection` is active.
2.  User fills `PersonalDetails` -> Clicks **Next: Employment History** (Editor Footer).
3.  `EmploymentHistorySection` becomes active.
    *   User can add/delete/rearrange entries.
4.  User clicks **Next: Education** -> `EducationSection` active.
5.  ... and so on for Skills, Professional Summary.
6.  After Professional Summary, **Next** button might become "Next: Additional Sections" or directly "Finish".
    *   If "Next: Additional Sections": User navigates to `AdditionalSectionsView`.
        *   Selects sections (e.g., Hobbies, Languages).
        *   Clicks **Finish** (or **Next: [First Selected Additional Section]**).
        *   The chosen sections are added to the `EditorPanelContainer`'s `FormSections`.
        *   User fills these out.
7.  At any point, user can click **Change Template** (Editor Header or Preview Header) -> Navigates to `TemplateView`.
    *   User customizes template -> Clicks **Back to editor**.
8.  User eventually clicks a final **Finish** or **Download PDF** button.

This detailed breakdown should give you a solid blueprint for how to structure your components and manage the interactions and navigation for your resume builder. Remember to build incrementally!